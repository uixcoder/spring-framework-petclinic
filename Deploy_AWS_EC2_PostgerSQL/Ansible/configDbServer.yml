---
- name: Configure Db Server
  hosts: db_server
  become: yes
  become_method: sudo
  remote_user: ec2-user
  vars:
    db_user: db_user_template
    db_password: db_password_template
    db_name: db_name_template
    
  tasks:
    - name: install postgres on RHEL based distros
      yum:
        name: "{{ item }}"
        state: present
        update_cache: true
      become: true
      loop:
        - postgresql
        - postgresql-server
        - python3-psycopg2     
      when: ansible_os_family == 'RedHat'

    - name: "Find out if PostgreSQL is initialized"
      stat:
        path: "/var/lib/pgsql/data/pg_hba.conf"
      register: postgres_data

    - name: "Initialize PostgreSQL"
      shell: "postgresql-setup initdb"
      when: not postgres_data.stat.exists

    - name: Copy pg_hba.conf from local to remote
      copy:
        force: yes
        src  : ./config/pg_hba.conf
        dest : /var/lib/pgsql/data/
        mode : 0600
        owner: postgres
        group: postgres

    - name: Copy postgresql.conf from local to remote
      copy:
        force: yes
        src  : ./config/postgresql.conf
        dest : /var/lib/pgsql/data/
        mode : 0600
        owner: postgres
        group: postgres

    - name: Start and enable postgres services
      service: "name={{ item }} state=started enabled=yes"
      with_items:
        - postgresql

    - name: Create first database
      postgresql_db:
        state: present
        name: "{{ db_name }}"
      become: yes
      become_user: postgres
      
    - name: Create db user
      postgresql_user:
        state: present
        name: "{{ db_user }}"
        password: "{{ db_password }}"
      become: yes
      become_user: postgres

    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: "{{ db_name }}"
        roles: "{{ db_user }}"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres 